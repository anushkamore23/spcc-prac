#include <stdio.h>
#include <ctype.h>
#include <string.h>

char *keywords[] = { "if", "else", "while", "int", "return", "for", "float", "char" };
int keywordCount = sizeof(keywords) / sizeof(keywords[0]);

int isKeyword(char *str) {
    for (int i = 0; i < keywordCount; i++)
        if (!strcmp(str, keywords[i])) return 1;
    return 0;
}

void lexicalAnalyzer(char *input) {
    int i = 0;
    char token[100];
    while (input[i]) {
        if (isspace(input[i])) { i++; continue; }

        if (isalpha(input[i])) { // Identifier or keyword
            int j = 0;
            while (isalnum(input[i]))
                token[j++] = input[i++];
            token[j] = '\0';
            printf("%s: %s\n", isKeyword(token) ? "Keyword" : "Identifier", token);
        }
        else if (isdigit(input[i])) { // Number
            int j = 0;
            while (isdigit(input[i]))
                token[j++] = input[i++];
            token[j] = '\0';
            printf("Number: %s\n", token);
        }
        else if (strchr("+-*/=", input[i])) // Operators
            printf("Operator: %c\n", input[i++]);
        else if (strchr("();,{}", input[i])) // Special symbols
            printf("Special Symbol: %c\n", input[i++]);
        else // Unknown
            printf("Unknown Character: %c\n", input[i++]);
    }
}

int main() {
    char input[100];
    printf("Enter input: ");
    fgets(input, sizeof(input), stdin);
    input[strcspn(input, "\n")] = 0;
    lexicalAnalyzer(input);
    return 0;
}
